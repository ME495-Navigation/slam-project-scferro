<launch>
    <!-- Arguments -->
    <arg name="cmd_src" default="circle"/>
    <arg name="robot" default="nusim"/>
    <arg name="use_rviz" default="true"/>
    <arg name="world_config_file" default="basic_world.yaml"/>
    <arg name="odom_frame" default="odom"/>

    <!-- Launch rviz node if use_rviz==true and robot==localhost -->
    <node pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share nuturtle_control)/config/nuturtle_control_nusim.rviz" if="$(eval '\'$(var use_rviz)\' == \'true\' and \'$(var robot)\' == \'nusim\'')"/>

    <!-- Launch rviz node if use_rviz==true and robot==none -->
    <node pkg="rviz2" exec="rviz2" args="-d $(find-pkg-share nuturtle_control)/config/nuturtle_control_remote.rviz" if="$(eval '\'$(var use_rviz)\' == \'true\' and \'$(var robot)\' == \'none\'')"/>

    <!-- Launch nusim launch file if robot==nusim -->
    <include file="$(find-pkg-share nusim)/launch/nusim.launch.xml" if="$(eval '\'$(var robot)\' == \'nusim\'')">
        <arg name="use_rviz_sim" value="false" />
    </include>

    <!-- Launch nusim node to broadcast walls and obstacles if robot!=nusim -->
    <node pkg="nusim" exec="nusim" name="nusim" if="$(eval '\'$(var robot)\' != \'nusim\'')">
        <param from="$(find-pkg-share nusim)/config/$(var world_config_file)"/>
        <param name="draw_only" value="true" />
    </node>

    <!-- Load the blue turtle -->
    <include file="$(find-pkg-share nuturtle_description)/launch/load_one.launch.py" >
        <arg name="use_rviz" value="false" />
        <arg name="color" value="blue" />
        <arg name="use_jsp" value="true" />
    </include>

    <!-- Launch circle node if cmd_src==circle -->
    <node pkg="nuturtle_control" exec="circle" if="$(eval '\'$(var cmd_src)\' == \'circle\'')"/>

    <!-- Launch teleop node if cmd_src==teleop -->
    <node pkg="teleop_twist_keyboard" exec="teleop_twist_keyboard" output="screen" launch-prefix="xterm -e" if="$(eval '\'$(var cmd_src)\' == \'teleop\'')"/>
    
    <!-- Launch turtle_control node if robot==nusim -->
    <node pkg="nuturtle_control" exec="turtle_control" if="$(eval '\'$(var robot)\' == \'nusim\'')">
        <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
        <remap from="/wheel_cmd" to="red/wheel_cmd"/>
        <remap from="/sensor_data" to="red/sensor_data"/>
    </node>
    
    <!-- Launch turtle_control node if robot==localhost -->
    <node pkg="nuturtle_control" exec="turtle_control" if="$(eval '\'$(var robot)\' == \'localhost\'')">
        <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
    </node>
    
    <!-- Launch odometry node if robot!=localhost -->
    <node pkg="nuturtle_control" exec="odometry" if="$(eval '\'$(var robot)\' != \'localhost\'')">
        <param from="$(find-pkg-share nuturtle_description)/config/diff_params.yaml"/>
        <param name="body_id" value="blue/base_footprint" />
        <param name="odom_id" value="$(var odom_frame)" />
        <param name="wheel_left" value="blue/wheel_left_link" />
        <param name="wheel_right" value="blue/wheel_right_link" />
    </node>

    <!-- Launch numsr_turtlebot node if robot==localhost -->
    <node pkg="numsr_turtlebot" exec="numsr_turtlebot" if="$(eval '\'$(var robot)\' == \'localhost\'')"/>

    <!-- Launch numsr_turtlebot node if robot==localhost -->
    <include file="$(find-pkg-share hls_lfcd_lds_driver)/launch/hlds_laser.launch.py" if="$(eval '\'$(var robot)\' == \'localhost\'')"/>
    
    <!-- Publish a static TF between the odom and world frames-->
    <node pkg="tf2_ros" exec="static_transform_publisher" args="0 0 0 0 0 0 1 /nusim/world /odom"/>

</launch>